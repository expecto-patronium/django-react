name: Deploy to GAE

# Controls when the workflow will run
on:
  push:
    branches: [ django1 ]
  pull_request:
    branches: [ django1 ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    name: Deploying to Google Cloud
    runs-on: ubuntu-latest
    ##### ANY SECRETS WHICH ARE TO BE SET AS ENV's ON UBUNTU LATEST IMAGE BEFORE DEPLOYMENT, THIS DOESNOT SET ENV's FOR APP ENGINE
    env:
      DB_NAME_HASNAIN: ${{ secrets.DB_NAME_HASNAIN}}
      DB_USER_HASNAIN: ${{ secrets.DB_USER_HASNAIN}}
      DB_PWD_HASNAIN: ${{ secrets.DB_PWD_HASNAIN}}
      DJANGO_SECRET_HASNAIN: ${{ secrets.DJANGO_SECRET_HASNAIN }}
      DB_PORT_HASNAIN : ${{ secrets.DB_PORT_HASNAIN }}
      DB_HOST_HASNAIN : ${{ secrets.DB_HOST_HASNAIN }}

    #   GOOGLE_APP_CLIENT_ID: ${{ secrets.GOOGLE_APP_CLIENT_SECRET }}
    #   GOOGLE_APP_KEY: ${{ secrets.GOOGLE_APP_KEY }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    ##### CREATE RUNTIME ENV FILE FOR DEPLOYMENT, AND ADD SERVICE-ACCOUNT-KEY.json IF NEEDED
    - name: Creating Runtime .env and add service-account-key
      run: |
         touch .env
         echo  DB_NAME_HASNAIN="${{ secrets.DB_NAME_HASNAIN }}" >> .env
         echo  DB_USER_HASNAIN="${{ secrets.DB_USER_HASNAIN }}" >> .env
         echo  DB_PWD_HASNAIN="${{ secrets.DB_PWD_HASNAIN }}" >> .env
         echo  DJANGO_SECRET_HASNAIN="${{ secrets.DJANGO_SECRET_HASNAIN }}" >> .env
         echo  DB_PORT_HASNAIN="${{ secrets.DB_PORT_HASNAIN }}" >> .env
         echo  DB_HOST_HASNAIN="${{ secrets.DB_HOST_HASNAIN }}" >> .env
    #     echo  BUCKET="${{ secrets.BUCKET }}" >> .env
    #     echo  GOOGLE_APPLICATION_CREDENTIALS="./service-account-key.json"
    #     touch service-account-key.json
    #     echo "${{ secrets.GLOUD_FIRESTORE_KEY }}" >> service-account-key.json

    - name: Setup python 3.8
      uses: actions/setup-python@v2
      with:
       python-version: "3.8"
    - name: Install Requirements
      run: pip install -r requirements.txt 


    - name: Connect to gcloud
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ secrets.PROJECT_ID_HASNAIN }}
        service_account_key: ${{ secrets.SERVICE_ACCOUNT_HASNAIN}}
        export_default_credentials: true
    - name: Gather Static Files
      run: python manage.py collectstatic --noinput

    ### CREATE RUNTIME MIGRATIONS, THIS MAY CAUSE SOME ERRORS IF MIGRATIONS FOLDER IS NOT MAINTAINED, REMOVE MIGRATIONS FOLDER NAME FROM .gitignore

    # - name: Get Cloud SQL Proxy
    #   run: |
    #     wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
    #     chmod +x cloud_sql_proxy
    # - name: Run Migrations
    #   run: |
    #       python manage.py makemigrations
    #       python manage.py migrate

    - name: Deploy to App Engine
      id: deploy
      uses: google-github-actions/deploy-appengine@v0.2.0
      with:
        deliverables: app.yaml
        version: v1
        project_id: ${{ secrets.PROJECT_ID_HASNAIN}}
        credentials: ${{  secrets.SERVICE_ACCOUNT_HASNAIN}}